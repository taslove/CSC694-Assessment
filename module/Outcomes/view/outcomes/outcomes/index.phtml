<?php

   $title = 'Review Assessment Plans and Reports';
   $this->headTitle($title);
?>      
<center><h3>Review Assessment Outcomes</h3>

<div class="row">
   <div class="col-md-4">
   <div class="container">
   
     <br />
     <br />
      <!-- Choose Action -->
      <select class="selectpicker" id="action-menu" data-style="btn-primary" title='Choose Action'>
         <option data-hidden="true"></option>
      </select>  
     <br />
     <br />
   
      <!-- Choose Department/Unit -->
      <select class="selectpicker" id="unit-menu" data-style="btn-primary" title='Choose Department/Unit'>
         <option data-hidden="true"></option>
      </select>  
     <br />
     <br />
   
      <!-- Choose Program/Degree -->
      <select class="selectpicker" id="prog-menu" data-style="btn-primary" title='Choose Program/Degree' multiple>
         <option data-hidden="true"></option>
      </select>
     <br />
     <br />
   
     
      <p></p>
      <!-- the 'Find Outcome' button -->
      <a class="btn btn-primary btn-lg" id="find-button"><?php echo $this->translate
      ('Find Outcomes') ?> &raquo;</a>
          
      </div><!--close container-->
</div><!--close column-->


<!--column 2 - this holds the partial-->
  <div class="col-md-8">

  <div class="table-responsive">
    <table class="table table-bordered table-striped" id="partialHolder">
    </table>
  
    <?php
    
 //   if ($test == "I'm a post"){
 //   echo $this->partial('outcomes/outcomes/partial.phtml', array(
 //   'outcomes' => $outcomes,
 //   'userRole' => $userRole,
 //   'userID' => $userID,
//  ));
//    }
?> 

    
    
    
  </div> <!-- end of col-md-8--> 

  <!--
<style>
   textarea {
      width: 400px;
   }
</style>
<div class="container">
   <form class="form-horizontal" name="rtaform" id="rtaform" method="GET" action="#">
      <div class="control-group">
      <label class="control-label" for="ta_sample">Feedback Response</label>
      <div class="controls">
         <textarea rows="8" cols="60" class="rta" id="ta_sample" name="ta_sample"></textarea>
      </div> 
      </div> 
   </form>
</div>
-->










<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script src="../js/bootstrap.min.js"></script>
<script src="../js/bootstrap-rta.min.js"></script>
<script src="../js/bootstrap-select.js"></script>


<script>

// load actions based on user privileges
$(document).ready(function() {
   var actions = <?php print json_encode($useractions); ?>;
   for (var i = 0; i < actions.length; i++){
      $('#action-menu').append('<option>' + actions[i] + '</option>');
   }
   // call code to initialize the selectpicker
   // this must come after the options are initialized
   $('.selectpicker').selectpicker();
});

// update unit/department options based on actions
$(document).on('change', '#action-menu', function () {
   $action = $('#action-menu option:selected').val();
   // clear selectorlist before adding unit/department options
   var oldSelections = $('#unit-menu option');
   for (var i = 0; i < oldSelections.length; i++){
      oldSelections.remove();
   }
   // data-hidden="true" shows title on button
   $('#unit-menu').append('<option  data-hidden="true"></option>');
   $('#unit-menu').selectpicker('refresh');
   
   // create url for redirect
   var urlform = "<?php echo $this->url('outcomes', array(
                                    'controller'=>'outcomes',
                                    'action'=>'getUnits')); ?>";
   urlform = urlform + '/' + $action;
   // asynchronous ajax code to populate unit/department selector
   $.ajax({
      url: urlform,
      type: "GET",
      dataType: "json",
      error : function(xhr, status, error) {
         console.log("ERROR: ", xhr, xhr.status, xhr.getAllResponseHeaders());
      },
      success: function(unitsJson){
         for (var i = 0; i < unitsJson.length; i++){
            $('#unit-menu').append('<option>' + unitsJson[i].id + '</option>');
         }
         $('#unit-menu').selectpicker('refresh');
      },
   });
});

// update program options based on unit/department
$(document).on('change', '#unit-menu', function () {
   $unit = $('#unit-menu option:selected').val();
   // clear selectorlist before adding program/degree options
   var oldSelections = $('#prog-menu option');
   for (var i = 0; i < oldSelections.length; i++){
      oldSelections.remove();
   }
   $('#prog-menu').selectpicker('refresh');
   
   // create url for redirect
   var urlform = "<?php echo $this->url('outcomes', array(
                                    'controller'=>'outcomes',
                                    'action'=>'getPrograms')); ?>";
   urlform = urlform + '/' + $unit;
   
   // asynchronous ajax code to populate program/degree selector
   $.ajax({
      url: urlform,
      type: "GET",
      dataType: "json",
      error : function(xhr, status, error) {
         console.log("ERROR: ", xhr, xhr.status, xhr.getAllResponseHeaders());
      },
      success: function(programsJson){
         for (var i = 0; i < programsJson.length; i++){
            // need to include value in the option so that the id is accessible from the url
            $('#prog-menu').append('<option value="' + programsJson[i].id + '">' + programsJson[i].name + '</option>');
         }
         $('#prog-menu').selectpicker('refresh');
      },
   });
});

// play around with button
$(document).on('click', '#find-button', function () {
   $program = $('#prog-menu option:selected').val();

   
   // create url for redirect
   var urlform = "<?php echo $this->url('outcomes', array(
                                    'controller'=>'outcomes',
                                    'action'=>'getOutcomes')); ?>";
   urlform = urlform + '/' + $program;
      
   // asynchronous ajax code to populate program/degree selector
   $.ajax({
      url: urlform,
      type: "GET",
      dataType: "json",
      error : function(xhr, status, error) {
         console.log("ERROR: ", xhr, xhr.status, xhr.getAllResponseHeaders());
      },
      success: function(outcomesJson){
        // clear any existing html in the partial div
        $('#partialHolder').html("");
      

        
        for (var i = 0; i < outcomesJson.length; i++){
        $('#partialHolder').append("<tr><td>" + (i + 1) + "</td><td>" + outcomesJson[i].outcome_text + "</td></tr>");
         }
         
       // $('#prog-menu').selectpicker('refresh');
      },
   });
});




// add a listener to the 'Find Outcomes' button
var findButton = document.getElementById("find-button");
// findButton.addEventListener("click", handleFindButton);


function handleFindButton(){

//$(document).on('change', '#prog-menu', function () {
   $program = $('#prog-menu option:selected').val();
       $('#partialHolder').append($program);
   // clear selectorlist before adding program/degree options
   //var oldSelections = $('#prog-menu option');
   //for (var i = 0; i < oldSelections.length; i++){
   //   oldSelections.remove();
  // }
  // $('#prog-menu').selectpicker('refresh');
//}

}

// calling this function generates a list on the right hand side of the screen

// old mess around stuff
function displaySelectedProgramOutcomes(){
    
    var partial = <?php echo $this->partial('outcomes/outcomes/partial.phtml', array(
    'outcomes' => $outcomes,
    'userRole' => $userRole,
    'userID' => $userID,
    )); ?>
    
    $('#partialHolder').append(partial);

    if (document.getElementById("prog-menu").value.length < 1) {
        alert("Idiot..."); 
    } else {
   alert("Selected " + document.getElementById("prog-menu").value);
    }
}


</script>

