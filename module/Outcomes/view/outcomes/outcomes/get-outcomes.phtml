<?php
    // this functionality still needs to be added
   // $admin = true;
    // check to make sure there is at least one outcome
    if (sizeof($outcomes) > 0){
        $hasOutcomes = true;
    } else {
        $hasOutcomes = false;
    }
    
    if ($adminFlag == true){
        echo("<button class='btn btn-primary pull-right' id='addButton' type='button'>Add outcome</button><br /><br />");
    } else {
        echo("<br /><br />");
    }
?>

<div class="table-responsive">
    <div class="panel panel-default">
        <table class="table table-striped table-hover">     
            <tr>
                <?php
                // handle the table headers based on permissions, presence of at least one outcome
                if ($hasOutcomes == true){
                    echo("<th>#</th>");
                    echo("<th>Description</th>");
                    
                    // only add the extra column for buttons if it's an admin
                    if ($adminFlag == true){
                        echo("<th></th>");
                    }
                }
                ?>    
            </tr>
        
            <?php
             $counter = 1;
        
            foreach ($outcomes as $outcome) :
        
            // output the first two columns for everybody
            echo("<tr>");
            echo("<td>" . $this->escapeHtml($counter . '. ') . "</td>");
            echo("<td>" . $this->escapeHtml($outcome['outcome_text']) . "</td>");
        
            if ($adminFlag == true){
            // include the buttons on the page if it's someone with permission who's logged in
                echo("<td class='col-md-3'><div class='pull-right'>");
        
                // the outcome text is the second parameter of the editHandler - it's stored and read from the button's value attribute to avoid issues with JavaScript and parenthesis
                echo("<button type='button' id='b" . $counter . "' class='btn btn-primary btn-xs' value='" . (trim($this->escapeHtml($outcome['outcome_text']))));
                echo("' onclick='editHandler(" . $this->escapeHtml($outcome['id']) . ", " . "$(this).val(), " . $counter . ");'>Modify &raquo;</button> ");
        
                // use this jQuery to access the value of the modify button from the delete button - i.e. evaluates to $("#b1") for button one
                $jQueryPart = "$(\"#b" . $counter . "\")";
                
                // second button
                echo("<button type='button' class='btn btn-warning btn-xs' onclick='deleteHandler(");
                echo($this->escapeHtml($outcome['id']) . ", " . $jQueryPart . ".val());'>Delete &raquo;</button>");
                echo("</div></td>");
            }
            // close out the row and increment count for everybody
            $counter++;
            echo("</tr>");
            endforeach; 

            // add a message if there aren't any outcomes for the selected program
            if ($hasOutcomes == false){
               echo("<tr><td>There are no outcomes for this program.</td></tr>");
            }
            ?>
        </table>
    </div> 
</div>   <!-- Table reponsive div close-->
<script>
$(document).ready(function() {




    // store the id of the selected program
    var selectedProgram = <?php echo $this->escapeHtml($programId);?>;

    // handle the add button
    $("#addButton").on('click', function () {
        // create url for redirect
        var urlform = "<?php echo $this->url('outcomes', array(
                                    'controller'=>'outcomes',
                                    'action'=>'addOutcome')); ?>";
        urlform = urlform + '/' + selectedProgram;
      
        // asynchronous ajax code to populate program/degree selector
        $.ajax({
            url: urlform,
            type: "GET",
            dataType: "text",
            error : function(xhr, status, error) {
                console.log("ERROR: ", xhr, xhr.status, xhr.getAllResponseHeaders());
            },
            success: function(partialHtml){
                // clear any existing html in the partial div
                $('#partialHolder').html(partialHtml);
            },
        });
    });
});

// handle the edit button
function editHandler(outcomeId, outcomeText, outcomeNumber){
    var selectedProgram = <?php echo $this->escapeHtml($programId);?>;    
    var urlform = "<?php echo $this->url('outcomes', array(
                                    'controller'=>'outcomes',
                                    'action'=>'editOutcome')); ?>";
    urlform = urlform + '/' + selectedProgram;
        
    // asynchronous ajax code to populate program/degree selector
    $.ajax({
        url: urlform,
        type: "POST",
        data: { oid: outcomeId, text: outcomeText, number: outcomeNumber }, 
        dataType: "text",
        error : function(xhr, status, error) {
            console.log("ERROR: ", xhr, xhr.status, xhr.getAllResponseHeaders());
        },
        success: function(partialHtml){
            // clear any existing html in the partial div
            $('#partialHolder').html(partialHtml);
        },
    });
}

// handle clicks on the delete button
function deleteHandler(outcomeId, outcomeText){
    var selectedProgram = <?php echo $this->escapeHtml($programId);?>;
    
    // if the user wants to go through with it
    if (confirm("Are you sure you want to delete this outcome?\n\n\"" + outcomeText + "\"\n")) {
   
        var urlform = "<?php echo $this->url('outcomes', array(
                                    'controller'=>'outcomes',
                                    'action'=>'getOutcomes')); ?>";
        urlform = urlform + '/' + selectedProgram;
        
        // asynchronous ajax code to populate program/degree selector
        $.ajax({
            url: urlform,
            type: "POST",
            data: { action: "delete", oid: outcomeId }, 
            dataType: "text",
            error : function(xhr, status, error) {
                console.log("ERROR: ", xhr, xhr.status, xhr.getAllResponseHeaders());
            },
            success: function(partialHtml){
                // clear any existing html in the partial div
                $('#partialHolder').html(partialHtml);
            },
        });   
    } else {
    // Do nothing!
    }   
}

</script>